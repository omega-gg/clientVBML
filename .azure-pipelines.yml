#--------------------------------------------------------------------------------------------------
# Windows
#--------------------------------------------------------------------------------------------------

jobs:
- job: win32_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh build.sh win32 all
      cd deploy
      7z a ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-win32-qt5

# NOTE: Running test(s) on this build.
- job: win64_qt5
  pool:
    vmImage: "windows-latest"
  steps:
  - bash: |
      sh build.sh win64 all
      cd deploy
      7z a ../clientVBML.zip *
      cp ../test/*.sh .
      sh all.sh
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-win64-qt5

#--------------------------------------------------------------------------------------------------
# macOS
#--------------------------------------------------------------------------------------------------

- job: macOS_qt5
  pool:
    vmImage: "macOS-14"
  steps:
  - bash: |
      sh build.sh macOS all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-macOS-qt5

- job: macOS_qt6
  pool:
    vmImage: "macOS-14"
  steps:
  - bash: |
      sh environment.sh qt6
      sh build.sh macOS all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-macOS-qt6

#--------------------------------------------------------------------------------------------------
# Linux
#--------------------------------------------------------------------------------------------------

- job: linux32_qt4
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/clientVBML i386/ubuntu:18.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /clientVBML;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh environment.sh qt4;
                                     sh build.sh linux all;
                                     cd deploy;
                                     zip -rq ../clientVBML.zip *"
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-linux32-qt4

- job: linux64_qt4
  pool:
    # NOTE: Ubuntu 20.04 seems to be required for qt4-default.
    vmImage: "ubuntu-20.04"
  steps:
  - bash: |
      sh environment.sh qt4
      sh build.sh linux all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-linux64-qt4

#--------------------------------------------------------------------------------------------------

- job: linux32_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      docker run -d --name ubuntu -v $PWD:/clientVBML i386/ubuntu:20.04 tail -f /dev/null
      docker exec -t ubuntu bash -c "cd /clientVBML;
                                     apt-get update;
                                     apt-get -y install sudo curl zip git;
                                     sh build.sh linux all;
                                     cd deploy;
                                     zip -rq ../clientVBML.zip *"
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-linux32-qt5

- job: linux64_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh build.sh linux all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-linux64-qt5

#--------------------------------------------------------------------------------------------------

- job: linux64_qt6
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh environment.sh qt6
      sh build.sh linux all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-linux64-qt6

#--------------------------------------------------------------------------------------------------
# Android
#--------------------------------------------------------------------------------------------------

- job: android_qt5
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh build.sh android all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-android-qt5

- job: android_qt6
  pool:
    vmImage: "ubuntu-latest"
  steps:
  - bash: |
      sh environment.sh qt6
      sh build.sh android all
      cd deploy
      zip -rq ../clientVBML.zip *
  - publish: $(System.DefaultWorkingDirectory)/clientVBML.zip
    artifact: clientVBML-android-qt6
